trait Weapon
type +Weapon = %{ weapon: Weapon }

// Idea: Ranged weapons should do half or a third of the damage in melee range.
trait RangedWeapon extends Weapon
type +RangedWeapon = %{ weapon: RangedWeapon }

struct Sword extends Weapon
struct Shardblade extends Weapon
struct Spear extends Weapon
struct Shardbow extends RangedWeapon
struct Bow extends RangedWeapon

func weaponStrength(Weapon): Int
func weaponStrength(Sword): Int = 7
func weaponStrength(Shardblade): Int = 15
func weaponStrength(Spear): Int = 5
func weaponStrength(Shardbow): Int = 10
func weaponStrength(Bow): Int = 4

func weaponRange(RangedWeapon): Int
func weaponRange(Shardbow): Int = 20
func weaponRange(Bow): Int = 10


func baseStat(entity: +Stats & +Weapon, #attack): Int = weaponStrength(entity.weapon)

func baseStat(entity: +Stats & +Weapon, #range): Int = 0
func baseStat(entity: +Stats & +RangedWeapon, #range): Int = weaponRange(entity.weapon)
