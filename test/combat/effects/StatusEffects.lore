module combat.effects

use lore.list.[each, filter]

struct StatusEffects
  mut effects: [StatusEffect]
end

type +StatusEffects = %{ status_effects: StatusEffects }

domain status_effects: StatusEffects
  /**
   * Updates status effects, propagating the on_update event to them and removing effects that have expired.
   */
  act update() do
    status_effects.effects |> each(on_update)
    status_effects.effects = status_effects.effects |> filter(active?)
  end

  /**
    * Propagates the on_hit event to individual status effects.
    */
  act on_hit() do
    for effect <- status_effects.effects
      effect.on_hit()
    end
  end
end

domain entity: +StatusEffects
  act buff(effect: StatusEffect) do
    entity.status_effects.effects = entity.status_effects.effects :+ effect
  end
end
