trait Hero extends Combatant, +Weapon


struct Shardbearer extends Hero {
  name: String
  stats: Stats
  statusEffects: StatusEffects = StatusEffects([])
  open weapon: Weapon
}

func name(shardbearer: Shardbearer): String = shardbearer.name

act enterCombat(shardbearer: Shardbearer) {
  buff(shardbearer, createArmored(15, 3))
}


struct Radiant extends Hero {
  name: String

  /**
   * Infusion determines the number of combat turns that the radiant will be supported by Stormlight, starting
   * from the beginning of combat.
   */
  infusion: Int = 5

  stats: Stats
  statusEffects: StatusEffects = StatusEffects([])
  weapon: Weapon
}

func name(radiant: Radiant): String = radiant.name

act enterCombat(radiant: Radiant) {
  buff(radiant, createInfusion(radiant.infusion))
  buff(radiant, createArmored(3, 5))
}
