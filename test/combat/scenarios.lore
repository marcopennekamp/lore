// TODO: Running both scenarios at the same time is about 5% slower than running them in succession and then
//       combining times. This is probably due to some hashing problem or dispatch cache weakness. We might
//       want to investigate this in the long-term to clear any dispatch cache inefficiencies. Perhaps the
//       hash map's rebalancing threshold is too conservative or the hashes for structs with open property
//       types are not distributed well.
function test(): [SimulationResult] = {
  let scenarios = [kaladinVoidbringer(), sadeasDalinar()]
  for (scenario <- scenarios) {
    simulateCombat(first(scenario), second(scenario))
  }
}

function kaladinVoidbringer(): (Combatant, Combatant) = {
  let kaladin = Radiant {
    name = 'Kaladin',
    stats = Stats {
      health = 25,
      maximumHealth = 25, // TODO: How can we set the health to the maximum health by default?
      regeneration = 0,
      dodge = 0.34,
      speed = 3
    },
    weapon = Spear()
  }

  let voidbringer = Voidbringer { }

  (kaladin, voidbringer)
}

function sadeasDalinar(): (Combatant, Combatant) = {
  let sadeas = Shardbearer {
    name = 'Sadeas',
    stats = Stats {
      health = 15,
      maximumHealth = 15,
      regeneration = 0,
      dodge = 0.2,
      speed = 2
    },
    weapon = Shardbow()
  }

  let dalinar = Shardbearer {
    name = 'Dalinar',
    stats = Stats {
      health = 30,
      maximumHealth = 30,
      regeneration = 0,
      dodge = 0.15,
      speed = 3
    },
    weapon = Shardblade()
  }

  (sadeas, dalinar)
}
