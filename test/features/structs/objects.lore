module features.structs.objects

use lore.core.to_string
use lore.Enum.map

struct IntBox(value: Int)

object Empty

object Mutable do
  mut level: Int = 1
end

struct MutableAlias = Mutable

object LazyEmpty do
  empty: Empty = Empty
end

object LazyBox do
  box: IntBox = IntBox(5)
end

object LazyLazy do
  lazyEmpty: LazyEmpty = LazyEmpty
  lazyBox: LazyBox = LazyBox
end

@root
module features.structs do
  use lore.test._

  spec 'objects: various objects are mutated and accessed' do
    Mutable.level should_eq 1
    Mutable.level += 1
    Mutable.level should_eq 2
    Mutable.level += Mutable.level
    Mutable.level should_eq 4
    MutableAlias.level should_eq 4
    Mutable.level = 1
    MutableAlias.level should_eq 1

    LazyEmpty.empty should_eq Empty
    LazyBox.box should_eq IntBox(5)
    LazyLazy.lazyEmpty.empty should_eq Empty
    LazyLazy.lazyBox.box should_eq IntBox(5)
  end
end
