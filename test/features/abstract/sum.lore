module features.abstract.sum

trait A
trait X
trait Y extends X

object A1 extends A
object A2 extends A
object A3 extends A, Y
object B
object C
object D extends Y
object E extends X

func f(A | B | C): Int
func f(A): Int
func f(Y): Int = 1
func f(X): Int = 2
func f(A1): Int = 3
func f(A2): Int = 4
func f(A3): Int = 4
func f(B | C): Int = 5

@root
module features.abstract do
  use lore.test._

  spec 'sum: dispatch with sum types results in the expected values' do
    f(A1) should_eq 3
    f(A2) should_eq 4
    f(A3) should_eq 4
    f(B) should_eq 5
    f(C) should_eq 5
    f(D) should_eq 1
    f(E) should_eq 2
  end
end
