module features.lists.for_yield

use lore.number.absolute

struct Copper(value: Int)
struct Gold(value: Int)

func transform(a: Copper): Gold = Gold(absolute(a.value) * 2)
func transform(as: [Copper]): [Gold] = for a <- as yield transform(a)

func main(): [Gold] = transform([Copper(1), Copper(-5), Copper(10), Copper(-12)])

@root
module features.lists do
  use lore.test._

  spec 'for_yield: `main` transforms a list of copper into gold using a for-yield expression' do
    main() should_eq [Gold(2), Gold(10), Gold(20), Gold(24)]
  end
end
