module features.schemas.open_properties

use lore.core.to_string

struct Box[+A]
  open value: A
end

trait Content
object Juice extends Content
object Berry extends Content
object Hammer extends Content

@root
module lore.core do
  func to_string(Box[Juice]): String = 'juice box'
  func to_string(Box[Berry]): String = 'berry box'
  func to_string(thing: %{ value: Content }): String = 'thing with content'
  func to_string(thing: %{ value: Hammer }): String = 'thing with hammer'
end

@root
module features.schemas do
  use lore.test._

  // Once struct types are interned, this verifies that struct types with open properties are correctly interned. Open
  // property types must be taken into account.
  spec 'open_properties: stringify boxes with an open property type using shape types for dispatch' do
    to_string(Box[Content](Juice)) should_eq 'thing with content'
    to_string(Box[Content](Berry)) should_eq 'thing with content'
    to_string(Box[Content](Hammer)) should_eq 'thing with hammer'
  end
end
