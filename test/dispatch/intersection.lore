trait X
trait Y
trait Z
trait W
trait L
trait L1 extends L
trait L2 extends L

struct A implements X, W
struct B implements Y, L2
struct C implements Z, W, L1
struct D implements X, Y
struct E implements Y, L1, L2
struct F implements Y, W, L1
struct G implements Z

function f(v1: T1, v2: T2): String where T1, T2 = 'T1,T2'
function f(x: X, y: Y): String = 'X,Y'
function f(z: Z, w: W): String = 'Z,W'
function f(z: Z, w: W & L): String = 'Z,W&L'
function f(z: Z, w: W & L1): String = 'Z,W&L1'
function f(z: Z, w: W & L2): String = 'Z,W&L2'
function f(v1: Z & L, v2: W & L): String = 'Z&L,W&L'
function f(v1: X & W, v2: Y & L2): String = 'X&W,Y&L2'
function f(v1: W & Z, v2: Y & L): String = 'X&Z,Y&L'
function f(v1: Y & L, v2: X & Y): String = 'Y&L,X&Y'
function f(v1: Y & L1, v2: X & Y): String = 'Y&L1,X&Y'
function f(v1: Y & W & L1, v2: X & Y): String = 'Y&W&L1,X&Y'
function f(v1: Y, v2: Z & L): String = 'Y,Z&L'
function f(v1: Y, v2: Z & L1): String = 'Y,Z&L1'
function f(v1: Y, v2: Z & L2): String = 'Y,Z&L2'

function test(): [String] = [
  f(A(), B()),
  f(D(), D()),
  f(F(), C()),
  f(G(), C()),
  f(B(), D()),
  f(E(), D()),
  f(F(), D()),
  f(G(), F()),
  f(D(), A())
]
