module language.schemas.extract

use lore.core.to_string

trait Crate[+A]
func extract(Crate[A]): A where A

struct IntCrate(value: Int) extends Crate[Int]
func extract(crate: IntCrate): Int = crate.value

struct ListCrate[+A](list: [A]) extends Crate[[A]]
func extract(crate: ListCrate[A]): [A] where A = crate.list

object TobyCrate extends Crate[String]
func extract(TobyCrate): String = 'I am a crate and my name is Toby!'

@root
module language.schemas do
  use lore.test._

  spec 'extract: extract values from crates of different types' do
    extract(IntCrate(5)) should_eq 5
    extract(ListCrate([1, 2, 3])) should_eq [1, 2, 3]
    extract(TobyCrate) should_eq 'I am a crate and my name is Toby!'
  end
end
