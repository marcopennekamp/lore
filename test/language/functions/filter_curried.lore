module language.functions.filter_curried

use lore.Enum.[filter, map]
use lore.number.rem

@where A
func filter_curried(f: A => Boolean): [A] => [A] = do
  list => filter(list, f)
end

@root
module language.functions do
  use lore.test._

  // The objective of this test is to ensure that the compiler can type the `map`/`filter_curried` combination and the
  // inner lambda function, especially the parameter `x`.
  spec 'filter_curried: `filter_curried` filters lists of numbers' do
    let data = [
      [1, 2, 3, 4, 5],
      [4, 8, 11, 15, 6],
      [],
      [1, 1, 1, 1, 1],
    ]
    let filtered_data = data |> map(filter_curried(x => rem(x, 2) == 0))
    filtered_data should_eq [[2, 4], [4, 8, 6], [], []]
  end
end
