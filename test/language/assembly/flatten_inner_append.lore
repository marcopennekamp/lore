module language.assembly.flatten_inner_append

use lore.list.map

func append3(list: [Int]): [Int] = list :+ 3

func main(): [Int] = do
  let xss = [
    [1, 2],
    [],
    [3, 7, 5],
    [4, 4, 4],
  ]
  for xs <- xss, x <- append3(xs) yield x
end

@root
module language.assembly do
  use lore.test._

  spec 'flatten_inner_append: `for` handles a modification of a collection in an inner extractor' do
    main() should_eq [1, 2, 3, 3, 3, 7, 5, 3, 4, 4, 4, 3]
  end
end
