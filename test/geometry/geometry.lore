// Not to be confused with shape types and shape values. :)
trait Shape

domain shape: Shape
  // "Computed"/"Virtual" properties. Could be improved with the property syntax for types/traits suggested in the spec.
  func width(): Real
  func height(): Real

  func area(): Real = width(shape) * height(shape)
end


struct BoundingBox extends Shape
  x: Real, x_end: Real
  y: Real, y_end: Real
end

domain box: BoundingBox
  func width(): Real = box.x_end - box.x
  func height(): Real = box.y_end - box.y
end


struct Circle extends Shape
  x: Real, y: Real
  radius: Real
end

domain circle: Circle
  func width(): Real = circle.radius
  func height(): Real = circle.radius

  func area(): Real = circle.radius * circle.radius * pi()
end


struct Rectangle extends Shape
  x: Real, y: Real
  width: Real, height: Real
end

domain rect: Rectangle
  func width(): Real = rect.width
  func height(): Real = rect.height
end


func name(Shape): String
func name(Rectangle): String = 'rect'
func name(BoundingBox): String = 'box'
func name(Circle): String = 'circle'


// Yeah, I know. We don't have global constants yet.
func pi(): Real = 3.14159265359
