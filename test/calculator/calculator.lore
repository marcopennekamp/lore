module calculator

use Operator._

module Calculator do
  func evaluate(tokens: [Token]): Real = do
    let stack = Stack([])

    for token <- tokens
      handle(token, stack)
    end

    stack.pop()
  end

  func handle(token: Token, stack: Stack): Unit

  func handle(operand: Operand, stack: Stack): Unit = stack.push(operand.value)

  func handle(Add, stack: Stack): Unit = apply_binary_operator((a, b) => a + b, stack)
  func handle(Sub, stack: Stack): Unit = apply_binary_operator((a, b) => a - b, stack)
  func handle(Mul, stack: Stack): Unit = apply_binary_operator((a, b) => a * b, stack)
  func handle(Div, stack: Stack): Unit = apply_binary_operator((a, b) => a / b, stack)

  func apply_binary_operator(f: (Real, Real) => Real, stack: Stack): Unit = do
    let b = stack.pop()
    let a = stack.pop()
    stack.push(f(a, b))
  end
end
