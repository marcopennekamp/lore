trait Crate[+A]
function extract(crate: Crate[A]): A where A

struct IntCrate extends Crate[Int] { value: Int }
function extract(crate: IntCrate): Int = crate.value

struct ListCrate[+A] extends Crate[[A]] { list: [A] }
function extract(crate: ListCrate[Int]): [Int] = crate.list

struct TobyCrate extends Crate[String]
function extract(crate: TobyCrate): String = 'I am a crate and my name is Toby!'


function test(): [String] = [
  toString(extract(IntCrate(5))),
  toString(extract(ListCrate[Int]([1, 2, 3]))),
  extract(TobyCrate())
]
