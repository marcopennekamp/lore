trait Crate[+A]
func extract(Crate[A]): A where A

struct IntCrate(value: Int) extends Crate[Int]
func extract(crate: IntCrate): Int = crate.value

struct ListCrate[+A](list: [A]) extends Crate[[A]]
func extract(crate: ListCrate[A]): [A] where A = crate.list

struct TobyCrate extends Crate[String]
func extract(TobyCrate): String = 'I am a crate and my name is Toby!'


func test(): [String] = [
  toString(extract(IntCrate(5))),
  toString(extract(ListCrate([1, 2, 3]))),
  extract(TobyCrate())
]
