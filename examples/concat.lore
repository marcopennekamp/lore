trait ToString
trait List extends ToString
trait LinkedList extends List
trait Sorted

// We would actually have to return ToString/List/LinkedList with these operations, but we only care about the
// input type here, as this example is used to test multiple dispatch.
action concat(x: ToString, y: ToString) { }
action concat(x: List, y: List) { }
action concat(x: LinkedList, y: LinkedList) { }
action concat(x: LinkedList, y: LinkedList & Sorted) { }

// TODO (Idea): Create a function attach[L](a: A): A & L which attaches a label L to any value A. Of course, this
//              can't be a multi-function since the type must be known at run-time (or we could introduce the ability
//              to pass types to multi-functions at run-time), so we would have to implement it differently, somehow.
