module lore.test

use lore.test.expectation._

/**
  * Raises a VM assertion error with the `message`.
  */
func fail(message: String): Nothing = do
  intrinsic[Nothing]('lore.test.raise_assertion_error', message)
end

/**
  * Asserts that `actual_value` matches `expectation`.
  */
func should(actual_value: Any, expectation: Expectation): Unit = do
  if !matches?(expectation, actual_value)
    fail(failure_message(expectation, actual_value))
  end
end

/**
  * Asserts that `actual_value` does not match `expectation`.
  */
func should_not(actual_value: Any, expectation: Expectation): Unit = do
  if matches?(expectation, actual_value)
    fail(negated_failure_message(expectation, actual_value))
  end
end

// ------------------------------------------------------------------------------------------------------------------ //
// Expectation shorthands                                                                                             //
// ------------------------------------------------------------------------------------------------------------------ //

let be_true: Expectation = BooleanExpectation(true)
let be_false: Expectation = BooleanExpectation(false)

func eq(expected_value: Any): Expectation = EqualityExpectation(expected_value)

func be_lt(threshold_value: Any): Expectation = InequalityExpectation(InequalityRelation.LessThan, threshold_value)
func be_lte(threshold_value: Any): Expectation = InequalityExpectation(InequalityRelation.LessThanEqual, threshold_value)
func be_gt(threshold_value: Any): Expectation = InequalityExpectation(InequalityRelation.GreaterThan, threshold_value)
func be_gte(threshold_value: Any): Expectation = InequalityExpectation(InequalityRelation.GreaterThanEqual, threshold_value)

let be_some: Expectation = SomeOptionExpectation
let be_none: Expectation = NoneOptionExpectation

func should_eq(actual_value: Any, expected_value: Any): Unit = actual_value should eq(expected_value)
func should_not_eq(actual_value: Any, expected_value: Any): Unit = actual_value should_not eq(expected_value)
