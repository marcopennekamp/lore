module lore.Math

let pi: Real = 3.14159265359

func floor(x: Real): Int = dynamic[Int]('Lore.math.floor', x)
func round(x: Real): Int = dynamic[Int]('Lore.math.round', x)
func ceil(x: Real): Int = dynamic[Int]('Lore.math.ceil', x)

func remainder(a: Int, b: Int): Int = dynamic[Int]('Lore.math.remainder', a, b)

func min(x: Number, y: Number): Number = if x < y then x else y
func max(x: Number, y: Number): Number = if x > y then x else y

func absolute(x: Number): Number = if x < 0 then -x else x

func pow(base: Real, exponent: Real): Real = dynamic[Real]('Lore.math.pow', base, exponent)
