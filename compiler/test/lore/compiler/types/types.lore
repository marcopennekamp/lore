/**
 * This file contains definitions for type tests.
 */

trait Animal
trait Bird extends Animal
trait Mammal extends Animal
trait Fish extends Animal
struct Chicken extends Bird
struct Penguin extends Bird
struct Raven extends Bird
struct Human extends Mammal
trait Cat extends Mammal
struct ScottishFold extends Cat
struct Unicorn extends Mammal
struct Goldfish extends Fish {
  name: String
  size: Real
}
struct Koi extends Fish

trait Status
trait Healthy extends Status
trait Sick extends Status

struct Zoo {
  animals: [Animal]
}


trait Cage[+A <: Animal] extends { animal: A }
struct Aquarium[+A <: Fish] extends Cage[A] {
  animal: A
}
struct UnicornPen extends Cage[Unicorn] {
  animal: Unicorn
}

trait ConfusedCage1 extends Cage[Fish]
trait ConfusedCage2 extends Cage[Animal], ConfusedCage1
trait ConfusedCage3 extends ConfusedCage2, Cage[Unicorn]
trait ConfusedCage4 extends Cage[Fish], ConfusedCage1


trait Function[-A, +R]
struct IdentityFunction[T] extends Function[T, T]
struct IndexFunction[+T] extends Function[Int, T]
struct Box[+A] { value: A }
struct BoxFunction[T] extends Function[T, Box[T]], Function[Int, Box[T]]


trait Sauce
trait Ketchup extends Sauce
trait Mayo extends Sauce

trait Steak
trait Tofu

trait Meal[+S <: Sauce, Highlight]
struct SurpriseMeal[+S <: Sauce, H] extends Meal[S, H]
struct MeatLoversMeal[+S <: Sauce] extends Meal[S, Steak]
struct VeggieMeal[+S <: Sauce] extends Meal[S, Tofu]
struct VeganMeal extends Meal[Ketchup, Tofu]


trait Hashable

trait Wheel extends Hashable
struct CoolWheel extends Wheel
struct CheapWheel extends Wheel

type +Wheel = { wheel: Wheel }

trait Engine extends Hashable
struct GasEngine extends Engine
struct ElectricEngine extends Engine

type +Engine = { engine: Engine }

trait Car extends +Wheel, +Engine

trait Cycle extends +Wheel

struct Motorcycle extends Cycle {
  wheel: Wheel
  engine: Engine
}

struct Bicycle extends Cycle {
  wheel: Wheel
}
