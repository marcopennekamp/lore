trait A
struct AI() extends A
trait B
struct BI() extends B

/**
 * This example is meant to fail totality constraint validation. In simple terms, we want to ensure that
 * abstract functions which are specialized with one concrete type but never fully aren't magically valid.
 * This example is also mentioned in the spec.
 */
act f1(a: A, b: B)
act f1(a: AI, b: B)
act f1(a: A, b: BI)

func f2(A | B): String
func f2(AI): String = ''

func f3((A, String)): String
func f3((B, String)): String
